<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        D6TpWV6zCOkwAAAAAElFTkSuQmCC
</value>
  </data>
</root>